{
  "address": "0xAF578366c1D60F2FB7C14F038eEd585C233eEd8C",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "course_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "course_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "password",
          "type": "uint256"
        }
      ],
      "name": "Extract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "course_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "password",
          "type": "bytes32"
        }
      ],
      "name": "NewCourse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "course_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "Refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "courses",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "incoming_balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "outgoing_balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "last_available",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "course_id",
          "type": "uint256"
        }
      ],
      "name": "getCourseIncomingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "course_id",
          "type": "uint256"
        }
      ],
      "name": "getCourseOutgoingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "course_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "updateDate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x28ca3085169b194ee8a0ffadec825c5f810b2a72f4621544abc7f8bfe3add88e",
  "receipt": {
    "to": null,
    "from": "0x8672431fFE9BD7663826D861e6712C1cc671F81F",
    "contractAddress": "0xAF578366c1D60F2FB7C14F038eEd585C233eEd8C",
    "transactionIndex": 23,
    "gasUsed": "723945",
    "logsBloom": "0x
    "blockHash": "0x012aed2c1522ef41bf9eb0473ddd08d05e80d65ec23e3c21a4c25ac4a31c2abe",
    "transactionHash": "0x28ca3085169b194ee8a0ffadec825c5f810b2a72f4621544abc7f8bfe3add88e",
    "logs": [
      {
        "transactionIndex": 23,
        "blockNumber": 9771262,
        "transactionHash": "0x28ca3085169b194ee8a0ffadec825c5f810b2a72f4621544abc7f8bfe3add88e",
        "address": "0xAF578366c1D60F2FB7C14F038eEd585C233eEd8C",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008672431ffe9bd7663826d861e6712c1cc671f81f"
        ],
        "data": "0x",
        "logIndex": 20,
        "blockHash": "0x012aed2c1522ef41bf9eb0473ddd08d05e80d65ec23e3c21a4c25ac4a31c2abe"
      }
    ],
    "blockNumber": 9771262,
    "cumulativeGasUsed": "7488791",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "c9244a39f9ae9b30e3b951c9428fa326",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"course_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"course_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"password\",\"type\":\"uint256\"}],\"name\":\"Extract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"course_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"password\",\"type\":\"bytes32\"}],\"name\":\"NewCourse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"course_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"courses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"incoming_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outgoing_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_available\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"course_id\",\"type\":\"uint256\"}],\"name\":\"getCourseIncomingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"course_id\",\"type\":\"uint256\"}],\"name\":\"getCourseOutgoingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"course_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"updateDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoursesPayout.sol\":\"CoursesPayout\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\"},\"contracts/CoursesPayout.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract CoursesPayout is Ownable {\\n\\n    struct Course {\\n        uint incoming_balance;\\n        uint outgoing_balance;\\n        uint256 last_available;\\n        bytes32 key;\\n    }\\n\\n    mapping(uint => Course) public courses;\\n    uint public balance;\\n\\n    function NewCourse(uint course_id, uint256 date, bytes32 password) external onlyOwner {\\n        require(courses[course_id].last_available == 0, \\\"Course already exists.\\\");\\n\\n        bytes32 hashed_pass = keccak256(abi.encode(course_id, password));\\n        Course memory new_course = Course(0, 0, date, hashed_pass);\\n        courses[course_id] = new_course;\\n    }\\n\\n    function Deposit(uint course_id, uint amount) external onlyOwner {\\n        require(courses[course_id].last_available != 0, \\\"Course doesn't exist.\\\");\\n        while (courses[course_id].last_available + 31 days < block.timestamp) {\\n            courses[course_id].last_available = courses[course_id].last_available + 31 days;\\n            courses[course_id].outgoing_balance += courses[course_id].incoming_balance;\\n            courses[course_id].incoming_balance = 0;\\n        }\\n        \\n        uint modulo = amount % 2;\\n        amount = amount / 2;\\n\\n        courses[course_id].incoming_balance += amount;\\n        balance += amount + modulo;\\n    }\\n\\n    function Extract(uint course_id, uint password) external {\\n        bytes32 hashed_pass = keccak256(abi.encode(course_id, password));\\n        require(courses[course_id].last_available != 0, \\\"Course doesn't exist.\\\");\\n        require(hashed_pass == courses[course_id].key, \\\"Wrong Password.\\\");\\n        require(courses[course_id].last_available > block.timestamp, \\\"Too early to extract money.\\\");\\n\\n\\n        IERC20 usdt = IERC20(address(0xdAC17F958D2ee523a2206206994597C13D831ec7));\\n\\n        usdt.transfer(msg.sender, courses[course_id].outgoing_balance);\\n        courses[course_id].outgoing_balance = 0;\\n    }\\n\\n    function Refund(uint course_id, uint amount, address user) external onlyOwner {\\n        require(courses[course_id].last_available != 0, \\\"Course doesn't exist.\\\");\\n        \\n        IERC20 usdt = IERC20(address(0xdAC17F958D2ee523a2206206994597C13D831ec7));\\n\\n        usdt.transfer(user, amount);\\n\\n        uint modulo = amount % 2;\\n        amount = amount / 2;\\n\\n        courses[course_id].incoming_balance += amount;\\n        balance += amount + modulo;\\n    }\\n\\n    // Data Getting\\n\\n    function getCourseIncomingBalance(uint course_id) public view returns (uint) {\\n        require(courses[course_id].last_available != 0, \\\"Course doesn't exist.\\\");\\n\\n        return courses[course_id].incoming_balance;\\n    }\\n\\n    function getCourseOutgoingBalance(uint course_id) public view returns (uint) {\\n        require(courses[course_id].last_available != 0, \\\"Course doesn't exist.\\\");\\n\\n        return (courses[course_id].outgoing_balance);\\n    }\\n\\n    // Debug \\n\\n    function updateDate(uint course_id, uint256 date) public onlyOwner {\\n        require(courses[course_id].last_available != 0, \\\"Course doesn't exist.\\\");\\n        require(date != 0, \\\"Date can't be 0.\\\");\\n        courses[course_id].last_available = date;\\n        courses[course_id].outgoing_balance += courses[course_id].incoming_balance;\\n        courses[course_id].incoming_balance = 0;\\n    }\\n}\",\"keccak256\":\"0x482558bd6ca112e12bc7d5c7f060754c836cf94c431976ad71b0ffe6c35f1b90\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610bae8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a2b26dfe11610071578063a2b26dfe14610180578063a3af609b14610193578063b69ef8a8146101a6578063be76b806146101af578063f2fde38b146101c2578063fe438001146101d557600080fd5b8063322c27ee146100b957806343ba5cca146100ce578063715018a6146100e15780637d60c86e146100e95780638da5cb5b1461010f57806396f979d21461012a575b600080fd5b6100cc6100c73660046109b4565b6101e8565b005b6100cc6100dc3660046109d6565b6103a5565b6100cc61049d565b6100fc6100f7366004610a02565b6104d3565b6040519081526020015b60405180910390f35b6000546040516001600160a01b039091168152602001610106565b610160610138366004610a02565b6001602081905260009182526040909120805491810154600282015460039092015490919084565b604080519485526020850193909352918301526060820152608001610106565b6100cc61018e3660046109b4565b610518565b6100cc6101a13660046109b4565b6105f3565b6100fc60025481565b6100fc6101bd366004610a02565b61073e565b6100cc6101d0366004610a37565b61077f565b6100cc6101e3366004610a59565b61081a565b6040805160208082018590528183018490528251808303840181526060909201835281519181019190912060008581526001909252919020600201546102495760405162461bcd60e51b815260040161024090610a8e565b60405180910390fd5b600083815260016020526040902060030154811461029b5760405162461bcd60e51b815260206004820152600f60248201526e2bb937b733902830b9b9bbb7b9321760891b6044820152606401610240565b60008381526001602052604090206002015442106102fb5760405162461bcd60e51b815260206004820152601b60248201527f546f6f206561726c7920746f2065787472616374206d6f6e65792e00000000006044820152606401610240565b6000838152600160208190526040918290200154905163a9059cbb60e01b8152336004820152602481019190915273dac17f958d2ee523a2206206994597c13d831ec790819063a9059cbb906044016020604051808303816000875af1158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190610abd565b50505060009182525060016020819052604082200155565b6000546001600160a01b031633146103cf5760405162461bcd60e51b815260040161024090610adf565b600083815260016020526040902060020154156104275760405162461bcd60e51b815260206004820152601660248201527521b7bab939b29030b63932b0b23c9032bc34b9ba399760511b6044820152606401610240565b604080516020808201869052818301939093528151808203830181526060820180845281519185019190912060e08301845260008083526080840181815260a0850197885260c0909401918252968752600194859052929095209451855551918401919091559051600283015551600390910155565b6000546001600160a01b031633146104c75760405162461bcd60e51b815260040161024090610adf565b6104d16000610964565b565b6000818152600160205260408120600201546105015760405162461bcd60e51b815260040161024090610a8e565b506000908152600160208190526040909120015490565b6000546001600160a01b031633146105425760405162461bcd60e51b815260040161024090610adf565b6000828152600160205260409020600201546105705760405162461bcd60e51b815260040161024090610a8e565b806105b05760405162461bcd60e51b815260206004820152601060248201526f2230ba329031b0b713ba10313290181760811b6044820152606401610240565b6000828152600160208190526040822060028101849055805491018054919290916105dc908490610b14565b909155505050600090815260016020526040812055565b6000546001600160a01b0316331461061d5760405162461bcd60e51b815260040161024090610adf565b60008281526001602052604090206002015461064b5760405162461bcd60e51b815260040161024090610a8e565b600082815260016020526040902060020154429061066c906228de80610b14565b10156106d657600082815260016020526040902060020154610691906228de80610b14565b6000838152600160208190526040822060028101939093558254920180549091906106bd908490610b14565b909155505060008281526001602052604081205561064b565b60006106e3600283610b50565b90506106f0600283610b64565b600084815260016020526040812080549294508492909190610713908490610b14565b9091555061072390508183610b14565b600260008282546107349190610b14565b9091555050505050565b60008181526001602052604081206002015461076c5760405162461bcd60e51b815260040161024090610a8e565b5060009081526001602052604090205490565b6000546001600160a01b031633146107a95760405162461bcd60e51b815260040161024090610adf565b6001600160a01b03811661080e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610240565b61081781610964565b50565b6000546001600160a01b031633146108445760405162461bcd60e51b815260040161024090610adf565b6000838152600160205260409020600201546108725760405162461bcd60e51b815260040161024090610a8e565b60405163a9059cbb60e01b81526001600160a01b03821660048201526024810183905273dac17f958d2ee523a2206206994597c13d831ec790819063a9059cbb906044016020604051808303816000875af11580156108d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f99190610abd565b506000610907600285610b50565b9050610914600285610b64565b600086815260016020526040812080549296508692909190610937908490610b14565b9091555061094790508185610b14565b600260008282546109589190610b14565b90915550505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156109c757600080fd5b50508035926020909101359150565b6000806000606084860312156109eb57600080fd5b505081359360208301359350604090920135919050565b600060208284031215610a1457600080fd5b5035919050565b80356001600160a01b0381168114610a3257600080fd5b919050565b600060208284031215610a4957600080fd5b610a5282610a1b565b9392505050565b600080600060608486031215610a6e57600080fd5b8335925060208401359150610a8560408501610a1b565b90509250925092565b60208082526015908201527421b7bab939b2903237b2b9b713ba1032bc34b9ba1760591b604082015260600190565b600060208284031215610acf57600080fd5b81518015158114610a5257600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610b3557634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052601260045260246000fd5b600082610b5f57610b5f610b3a565b500690565b600082610b7357610b73610b3a565b50049056fea2646970667358221220329a9517cb6d002fb81d37ac82a02574813016017d9a6365a15e77413ef1109e64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a2b26dfe11610071578063a2b26dfe14610180578063a3af609b14610193578063b69ef8a8146101a6578063be76b806146101af578063f2fde38b146101c2578063fe438001146101d557600080fd5b8063322c27ee146100b957806343ba5cca146100ce578063715018a6146100e15780637d60c86e146100e95780638da5cb5b1461010f57806396f979d21461012a575b600080fd5b6100cc6100c73660046109b4565b6101e8565b005b6100cc6100dc3660046109d6565b6103a5565b6100cc61049d565b6100fc6100f7366004610a02565b6104d3565b6040519081526020015b60405180910390f35b6000546040516001600160a01b039091168152602001610106565b610160610138366004610a02565b6001602081905260009182526040909120805491810154600282015460039092015490919084565b604080519485526020850193909352918301526060820152608001610106565b6100cc61018e3660046109b4565b610518565b6100cc6101a13660046109b4565b6105f3565b6100fc60025481565b6100fc6101bd366004610a02565b61073e565b6100cc6101d0366004610a37565b61077f565b6100cc6101e3366004610a59565b61081a565b6040805160208082018590528183018490528251808303840181526060909201835281519181019190912060008581526001909252919020600201546102495760405162461bcd60e51b815260040161024090610a8e565b60405180910390fd5b600083815260016020526040902060030154811461029b5760405162461bcd60e51b815260206004820152600f60248201526e2bb937b733902830b9b9bbb7b9321760891b6044820152606401610240565b60008381526001602052604090206002015442106102fb5760405162461bcd60e51b815260206004820152601b60248201527f546f6f206561726c7920746f2065787472616374206d6f6e65792e00000000006044820152606401610240565b6000838152600160208190526040918290200154905163a9059cbb60e01b8152336004820152602481019190915273dac17f958d2ee523a2206206994597c13d831ec790819063a9059cbb906044016020604051808303816000875af1158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190610abd565b50505060009182525060016020819052604082200155565b6000546001600160a01b031633146103cf5760405162461bcd60e51b815260040161024090610adf565b600083815260016020526040902060020154156104275760405162461bcd60e51b815260206004820152601660248201527521b7bab939b29030b63932b0b23c9032bc34b9ba399760511b6044820152606401610240565b604080516020808201869052818301939093528151808203830181526060820180845281519185019190912060e08301845260008083526080840181815260a0850197885260c0909401918252968752600194859052929095209451855551918401919091559051600283015551600390910155565b6000546001600160a01b031633146104c75760405162461bcd60e51b815260040161024090610adf565b6104d16000610964565b565b6000818152600160205260408120600201546105015760405162461bcd60e51b815260040161024090610a8e565b506000908152600160208190526040909120015490565b6000546001600160a01b031633146105425760405162461bcd60e51b815260040161024090610adf565b6000828152600160205260409020600201546105705760405162461bcd60e51b815260040161024090610a8e565b806105b05760405162461bcd60e51b815260206004820152601060248201526f2230ba329031b0b713ba10313290181760811b6044820152606401610240565b6000828152600160208190526040822060028101849055805491018054919290916105dc908490610b14565b909155505050600090815260016020526040812055565b6000546001600160a01b0316331461061d5760405162461bcd60e51b815260040161024090610adf565b60008281526001602052604090206002015461064b5760405162461bcd60e51b815260040161024090610a8e565b600082815260016020526040902060020154429061066c906228de80610b14565b10156106d657600082815260016020526040902060020154610691906228de80610b14565b6000838152600160208190526040822060028101939093558254920180549091906106bd908490610b14565b909155505060008281526001602052604081205561064b565b60006106e3600283610b50565b90506106f0600283610b64565b600084815260016020526040812080549294508492909190610713908490610b14565b9091555061072390508183610b14565b600260008282546107349190610b14565b9091555050505050565b60008181526001602052604081206002015461076c5760405162461bcd60e51b815260040161024090610a8e565b5060009081526001602052604090205490565b6000546001600160a01b031633146107a95760405162461bcd60e51b815260040161024090610adf565b6001600160a01b03811661080e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610240565b61081781610964565b50565b6000546001600160a01b031633146108445760405162461bcd60e51b815260040161024090610adf565b6000838152600160205260409020600201546108725760405162461bcd60e51b815260040161024090610a8e565b60405163a9059cbb60e01b81526001600160a01b03821660048201526024810183905273dac17f958d2ee523a2206206994597c13d831ec790819063a9059cbb906044016020604051808303816000875af11580156108d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f99190610abd565b506000610907600285610b50565b9050610914600285610b64565b600086815260016020526040812080549296508692909190610937908490610b14565b9091555061094790508185610b14565b600260008282546109589190610b14565b90915550505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156109c757600080fd5b50508035926020909101359150565b6000806000606084860312156109eb57600080fd5b505081359360208301359350604090920135919050565b600060208284031215610a1457600080fd5b5035919050565b80356001600160a01b0381168114610a3257600080fd5b919050565b600060208284031215610a4957600080fd5b610a5282610a1b565b9392505050565b600080600060608486031215610a6e57600080fd5b8335925060208401359150610a8560408501610a1b565b90509250925092565b60208082526015908201527421b7bab939b2903237b2b9b713ba1032bc34b9ba1760591b604082015260600190565b600060208284031215610acf57600080fd5b81518015158114610a5257600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610b3557634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052601260045260246000fd5b600082610b5f57610b5f610b3a565b500690565b600082610b7357610b73610b3a565b50049056fea2646970667358221220329a9517cb6d002fb81d37ac82a02574813016017d9a6365a15e77413ef1109e64736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/CoursesPayout.sol:CoursesPayout",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 224,
        "contract": "contracts/CoursesPayout.sol:CoursesPayout",
        "label": "courses",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Course)219_storage)"
      },
      {
        "astId": 226,
        "contract": "contracts/CoursesPayout.sol:CoursesPayout",
        "label": "balance",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint256,t_struct(Course)219_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CoursesPayout.Course)",
        "numberOfBytes": "32",
        "value": "t_struct(Course)219_storage"
      },
      "t_struct(Course)219_storage": {
        "encoding": "inplace",
        "label": "struct CoursesPayout.Course",
        "members": [
          {
            "astId": 212,
            "contract": "contracts/CoursesPayout.sol:CoursesPayout",
            "label": "incoming_balance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 214,
            "contract": "contracts/CoursesPayout.sol:CoursesPayout",
            "label": "outgoing_balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 216,
            "contract": "contracts/CoursesPayout.sol:CoursesPayout",
            "label": "last_available",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 218,
            "contract": "contracts/CoursesPayout.sol:CoursesPayout",
            "label": "key",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}